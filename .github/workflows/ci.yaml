name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/laiker"
  IMAGE_NAME: "chat-server"
  CONTAINER_NAME: "chat-server-container"
  CONTAINER_MIGRATOR_NAME: "chat-migrator-container"
  IMAGE_MIGRATOR_NAME: "chat-migrator"
  NETWORK: "chat-network"
  PORT: "50053"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Create .env file
        run: |
          echo "GRPC_HOST=0.0.0.0" >> .env
          echo "GRPC_PORT=$PORT" >> .env
          echo "MIGRATION_DIR=./migrations" >> .env
          echo "POSTGRES_HOST=${{ secrets.SERVER_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env 
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "AUTH_HOST=${{ secrets.AUTH_HOST }}" >> .env

      - name: Create TLS certificates
        run: |
          echo "${{ secrets.SERVICE_PEM }}" > service.pem
          ls -la service.*
          chmod 600 service.pem

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f ./Dockerfile .

      - name: Build and Push Docker Migrator Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_MIGRATOR_NAME:$TAG_NAME -f ./migration_prod.Dockerfile .

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME,CONTAINER_MIGRATOR_NAME,IMAGE_MIGRATOR_NAME,NETWORK,PORT
          script: |
            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            # Stop running container
            docker stop $CONTAINER_NAME
            
            # Remove old container
            docker rm $CONTAINER_NAME
            docker rm $CONTAINER_MIGRATOR_NAME
            
            if [ -z "$(docker network ls -q -f name=$NETWORK)" ]; then  
                docker network create $NETWORK || exit 1  
            fi
            
            # Run a new container from a new image
            docker run -d --network $NETWORK -p $PORT:$PORT --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME
            
            # Run migrator
            docker run -d --network $NETWORK --name $CONTAINER_MIGRATOR_NAME -t $REGISTRY/$IMAGE_MIGRATOR_NAME:$TAG_NAME